# admin.py

import asyncio

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from aiogram import types, Dispatcher

from reg_bot import dp, bot
from data_base import database
from keyboards import admin_kb, main_kb


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
class AddLink(StatesGroup):
	get_link_title = State()
	get_link = State()

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
class DeleteLink(StatesGroup):
	delete_link = State()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—á–∞—Ç–∏
async def bot_typing(user_id, time):
	await bot.send_chat_action(
		user_id,
		types.ChatActions.TYPING
	)

	await asyncio.sleep(time)


# –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def admin_panel(message: types.Message):
	await bot_typing(message.from_user.id, 1)
	await message.answer(
		"–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞üëá",
		reply_markup = admin_kb.main
	)


# –û—Ç–º–µ–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
async def cancel(callback: types.CallbackQuery, state: "*"):
	await callback.message.edit_reply_markup(reply_markup = None)

	await state.reset_state()
	await bot_typing(callback.from_user.id, 1)
	await callback.message.answer(
		"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
		reply_markup = admin_kb.main
	)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "+ —Å—Å—ã–ª–∫–∞"
async def command_add_link(callback: types.CallbackQuery, state: AddLink):
	await callback.message.edit_reply_markup(reply_markup = None)

	await bot_typing(callback.from_user.id, 2)
	await callback.message.answer(
		"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏üîó",
		reply_markup = admin_kb.cancel
	)

	await AddLink.get_link_title.set()


# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
async def get_link_title(message: types.Message, state: AddLink):
	async with state.proxy() as data:
		data["link_title"] = message.text

	await bot_typing(message.from_user.id, 2)
	
	await message.answer(
		"–ü—Ä–∏—à–ª–∏—Ç–µ —Å–∞–º—É —Å—Å—ã–ª–∫—Éüîó",
		reply_markup = admin_kb.cancel
	)

	await AddLink.get_link.set()


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
async def get_link(message: types.Message, state: AddLink):
	async with state.proxy() as data:
		data["link"] = message.text

	await database.add_link(message.from_user.id, state)
	await bot_typing(message.from_user.id, 1)
	
	await message.answer(
		"–°—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞‚úÖ",
		reply_markup = admin_kb.main
	)

	await state.finish()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "‚Äì —Å—Å—ã–ª–∫–∞"
async def command_delete_link(callback: types.CallbackQuery, state: DeleteLink):
	await callback.message.edit_reply_markup(reply_markup = None)

	del_links = await admin_kb.links(callback.from_user.id)

	if del_links["inline_keyboard"][1] == []:
		await bot_typing(callback.from_user.id, 1)
		await callback.message.answer(
			"–£–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ",
			reply_markup = main_kb.add_link
		)

		await asyncio.sleep(0.5)
		await callback.message.answer_sticker("CAACAgIAAxkBAAILz2W_8ik-Yyr_dcsFiY5vXB8QIowFAAKQAQACMNSdEUqG5uIJ-atJNAQ")

		return

	await bot_typing(callback.from_user.id, 3)

	await callback.message.answer(
		"–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—Éüîó, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å‚ùå",
		reply_markup = del_links
	)

	await DeleteLink.delete_link.set()


# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
async def delete_link(callback: types.CallbackQuery, state: DeleteLink):
	await callback.message.edit_reply_markup(reply_markup = None)

	link_title = callback.data.split("_")[1]
	await database.delete_link(callback.from_user.id, link_title)
	await bot_typing(callback.from_user.id, 1)
	await callback.message.answer(
		"–°—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞‚ùå",
		reply_markup = admin_kb.main
	)

	await state.finish()


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞
def register_handlers_admin(dp: Dispatcher):
	dp.register_message_handler(
		admin_panel, commands = ["admin"]
	)

	dp.register_message_handler(
		get_link_title, state = AddLink.get_link_title
	)

	dp.register_message_handler(
		get_link, state = AddLink.get_link
	)


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è callback-—Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
def register_callback_handlers(dp: Dispatcher):
	dp.register_callback_query_handler(
		cancel, text = "–û—Ç–º–µ–Ω–∞‚ùå", state = "*"
	)

	dp.register_callback_query_handler(
		command_add_link, text = "+ —Å—Å—ã–ª–∫–∞üîó"
	)

	dp.register_callback_query_handler(
		command_delete_link, text = "‚Äì —Å—Å—ã–ª–∫–∞üîó"
	)

	dp.register_callback_query_handler(
		delete_link, 
		lambda callback: callback.data.startswith("del_"),
		state = DeleteLink
	)
