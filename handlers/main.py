# main.py

import asyncio

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from aiogram import types, Dispatcher

from reg_bot import dp, bot
from data_base import database
from keyboards import main_kb


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—á–∞—Ç–∏
async def bot_typing(user_id, time):
    await bot.send_chat_action(
        user_id,
        types.ChatActions.TYPING
    )

    await asyncio.sleep(time)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(message: types.Message):
    await database.start(message.from_user.id)
    await bot_typing(message.from_user.id, 3)
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {message.from_user.first_name}! "
        "–î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—Éüîó",
        reply_markup = main_kb.add_link
    )

    await asyncio.sleep(0.5)
    await message.answer_sticker("CAACAgIAAxkBAAILyGW_79Se78GoBE_W-rA3qrnWwLo0AAKgAQACMNSdEYM014Zyl9YTNAQ")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /restart
async def restart(message: types.Message, state: "*"):
    await state.reset_state()
    await bot_typing(message.from_user.id, 1)
    await message.answer("–£—Ä–∞! –Ø –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–ΩüîÑ")
    await asyncio.sleep(0.5)
    await message.answer_sticker("CAACAgIAAxkBAAILymW_8UIm5BsiwAxdBzIlKz5Q0jsuAAKoAQACMNSdEQ9mlBNu5v_eNAQ")


# –ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def your_links(message: types.Message):
    links = await main_kb.links(message.from_user.id)
    
    if links["inline_keyboard"] == []:
        await bot_typing(message.from_user.id, 3)
        await message.answer(
            "–£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç —Å—Å—ã–ª–æ–∫, –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Å—Å—ã–ª–∫—Éüîó",
            reply_markup = main_kb.add_link
        )
    
    else:
        await bot_typing(message.from_user.id, 1)
        await message.answer(
            "–í–∞—à–∏ —Å—Å—ã–ª–∫–∏üîó",
            reply_markup = links
        )


def register_handlers_main(dp: Dispatcher):
    dp.register_message_handler(start, commands = ["start"])
    dp.register_message_handler(restart, commands = ["restart"])
    dp.register_message_handler(your_links)
